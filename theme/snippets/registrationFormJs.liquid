<script>
    function validateForm() {
        const tabs = document.getElementsByClassName("tab");
        const requiredFields = tabs[currentTab].querySelectorAll("[required]");
        const passwordInput = document.getElementById("password");
        const confirmPasswordInput = document.getElementById("confirmPassword");
        const confirmPasswordError = document.getElementById("confirmPasswordError");
        const passwordError = document.getElementById("passwordError");
        let valid = true;

        const termsCheckbox = document.querySelector("[data-terms-field]");
        const submitButton = document.getElementById("submitBtn");
        const nextButton = document.getElementById("nextBtn");
        const salonName = document.getElementById("salon_name");
        const salonNameError = document.getElementById("salonNameError");
        const phoneNumberInput = document.getElementById('phone');
        const phoneNumberError = document.getElementById('phoneError');
        const phoneNumber = phoneNumberInput.value;

        const emailInput = document.getElementById("email");
        const emailError = document.getElementById("emailError");
        const emailValue = emailInput.value;
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        const zipCodes = tabs[currentTab].querySelector("#zip");
        const zipInput = document.getElementById("zip");
        const zipError = document.getElementById("zipError");
        const zipValue = emailInput.value;

        const passwordPattern = /^[a-zA-Z0-9]{8,50}$/;
        const textFieldPattern = /^[A-Za-z ]{2,50}$/

        termsCheckbox.addEventListener('change', function () {
            if (termsCheckbox.checked && valid) {
                submitButton.disabled = false; // Enable the "Submit" button
                // nextButton.disabled = false; // Enable the "Next" button
            } else {
                submitButton.disabled = true; // Disable the "Submit" button
                // nextButton.disabled = true; // Disable the "Next" button
            }
        });

        function validateZipCode(zipCode) {
            const zipPatternUSA = /^\d{5}(?:-\d{4})?$/;
            const zipPatternCanada =  /^[A-Za-z]\d[A-Za-z]\s?\d[A-Za-z]\d$/;

            return zipPatternUSA.test(zipCode) || zipPatternCanada.test(zipCode);
        }

        function checkFormValidity() {
            valid = true;

            requiredFields.forEach(function (field) {
                if (field.value === "") {
                    field.classList.add("invalid");
                    valid = false;
                    field.nextElementSibling.textContent = "Empty value";
                } else if( field.value.length < 2) {
                    field.classList.add("invalid");
                    valid = false;
                    field.nextElementSibling.textContent = "Text must be at least 2 characters";
                }else {
                    field.classList.remove("invalid");
                    field.nextElementSibling.textContent = "";
                }
            });

            // Phone validation
            if (!validatePhoneNumber(phoneNumber)) {
                console.log('phone not valid')
                phoneNumberError.style.display = 'block';
                phoneNumberError.textContent = "Incorrect phone number";
                phoneNumberInput.classList.add('invalid');
                valid = false;
            } else {
                phoneNumberError.style.display = 'none';
                phoneNumberError.textContent = "";
                phoneNumberInput.classList.remove('invalid');
            }

            // Email validation
            if (!emailPattern.test(emailValue)) {
                console.log('email not valid')
                emailError.textContent = "Invalid email format";
                emailError.style.display = 'block';
                emailInput.classList.add("invalid");
                valid = false;
            } else {
                emailError.textContent = "";
                emailError.style.display = 'none';
                emailInput.classList.remove("invalid");
            }

            // Password validation
            if (!passwordPattern.test(passwordInput.value)) {
                console.log('Password must be at least 8 characters')
                passwordError.textContent = "Password must be at least 8 characters";
                valid = false;
            } else if (passwordInput.value !== confirmPasswordInput.value) {
                console.log('Passwords do not match')
                confirmPasswordError.textContent = "Passwords do not match";
                valid = false;
            } else {
                passwordError.textContent = "";
                confirmPasswordError.textContent = "";
            }

            // Zip Code validation
            if (zipCodes === !null) {

                if (!validateZipCode(zipValue)) {
                    console.log('zip not valid')
                    zipError.textContent = "Invalid zip code format";
                    zipError.style.display = 'block';
                    zipInput.classList.add("invalid");
                    valid = false;
                } else {
                    zipError.textContent = "";
                    zipError.style.display = 'none';
                    zipInput.classList.remove("invalid");
                }
            }

            // if (valid) {
            //     nextButton.disabled = false; // Enable the "Next" button
            // } else {
            //     nextButton.disabled = true; // Disable the "Next" button
            // }
        }

        requiredFields.forEach(function (field) {
            field.addEventListener('input', checkFormValidity);
        });

        emailInput.addEventListener('input', checkFormValidity);
        phoneNumberInput.addEventListener('input', checkFormValidity);
        passwordInput.addEventListener('input', checkFormValidity);
        confirmPasswordInput.addEventListener('input', checkFormValidity);
        termsCheckbox.addEventListener('change', checkFormValidity);
        zipInput.addEventListener('change', checkFormValidity);

        checkFormValidity();
        return valid;
    }


    // function validateForm() {
    //     const tabs = document.getElementsByClassName("tab");
    //     const requiredFields = tabs[currentTab].querySelectorAll("[required]");
    //     const passwordInput = document.getElementById("password");
    //     const confirmPasswordInput = document.getElementById("confirmPassword");
    //     const confirmPasswordError = document.getElementById("confirmPasswordError");
    //     let valid = true;
    //
    //     const termsCheckbox = document.querySelector("[data-terms-field]");
    //     const submitButton = document.getElementById("submitBtn");
    //
    //     const phoneNumberInput = document.getElementById('phone');
    //     const errorSpan = document.getElementById('phoneError');
    //
    //
    //     termsCheckbox.addEventListener('change', function() {
    //         if (termsCheckbox.checked) {
    //             submitButton.disabled = false; // Включити кнопку
    //         } else {
    //             submitButton.disabled = true; // Вимкнути кнопку
    //         }
    //     });
    //
    //     // phoneNumberInput.addEventListener('input', function(event) {
    //     //     console.log('test')
    //     const phoneNumber = phoneNumberInput.value;
    //
    //     if (validatePhoneNumber(phoneNumber)) {
    //         errorSpan.style.display = 'none';
    //         phoneNumberInput.classList.remove('invalid');
    //         errorSpan.textContent = "";
    //     } else {
    //         errorSpan.textContent = "incorrect phone number";
    //         phoneNumberInput.classList.add('invalid');
    //         errorSpan.style.display = 'block';
    //         valid = false;
    //     }
    //     // });
    //
    //     for (let i = 0; i < requiredFields.length; i++) {
    //         if (requiredFields[i].value === "") {
    //             requiredFields[i].classList.add("invalid");
    //             valid = false;
    //         }
    //     }
    //
    //     if (passwordInput.value !== confirmPasswordInput.value) {
    //         confirmPasswordError.textContent = "Passwords do not match";
    //         valid = false;
    //     } else {
    //         confirmPasswordError.textContent = "";
    //     }
    //
    //     return valid;
    // }

    function validatePhoneNumber(phoneNumber) {
        // Remove all non-digit characters
        const cleanedPhoneNumber = phoneNumber.replace(/-/g, '');

        // Check if the number matches the USA or Canada format
        const phoneRegex = /^[+]\d{1,3}\s?\d{3}\s?\d{3}\s?\d{4}$/;

        if (phoneRegex.test(cleanedPhoneNumber)) {
            return true; // Номер є валідним
        } else {
            return false; // Номер не відповідає формату
        }
    }

    // Upload function
    function imagePreview() {
        const fileField = document.getElementById("file-input");
        const labelText = document.querySelector("[data-upload-text]");
        const labelRemove = document.querySelector("[data-remove-img]");
        const uploadWrap = document.querySelector("[data-upload-file]");
        const uploadImageWrap = document.querySelector("[ data-upload-image-wrap]");
        const labelDefault = labelText.textContent;
        const preview = document.getElementById("preview");

        // on file change
        // file.addEventListener("change", (event) => {
        const file = fileField.files[0];
        const allowedTypes = ['image/jpeg', 'image/jpg', 'application/pdf', 'image/png'];

        // Перевірити, чи вибраний файл і його розмір не перевищує 5 МБ
        if (file && file.size > 5 * 1024 * 1024) {
            alert('Розмір файлу перевищує максимально допустимий розмір (5 МБ). Будь ласка, виберіть файл меншого розміру.');
            // Очистити значення елемента вводу файлу (необов'язково)
            fileField.value = '';
        }
        if (allowedTypes.includes(file.type)) {
            const fileName = fileField.value.split("\\").pop();
            if (fileName) {
                console.log(file);
                labelText.textContent = fileName;
                labelRemove.style.display = "flex";
                preview.style.display = "block";

                console.log('file.files', file)
                if (file.type === "application/pdf") {
                    console.log('1')
                    uploadImageWrap.style.display = "none";
                    uploadWrap.style.display = "none";
                } else {
                    console.log('2')
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        preview.setAttribute("src", e.target.result);
                        uploadWrap.style.display = "none";
                        uploadImageWrap.style.display = "block";
                    };
                    reader.readAsDataURL(file);
                }
            } else {
                labelText.textContent = labelDefault;
                labelRemove.style.display = "none";
                preview.style.display = "none";
                uploadWrap.style.display = "block";
            }
        }
        // });
    }

    // Remove file
    function removePreview() {
        const fileField = document.getElementById("file-input");
        const file = fileField.files[0];
        const labelText = document.querySelector("[data-upload-text]");
        const labelRemove = document.querySelector("[data-remove-img]");
        const uploadWrap = document.querySelector("[data-upload-file]");
        const preview = document.getElementById("preview");
        const labelDefault = labelText.textContent;
        // labelRemove.addEventListener("click", (event) => {
        file.value = "";
        labelText.textContent = labelDefault;
        labelRemove.style.display = "none";
        preview.style.display = "none";
        uploadWrap.style.display = "block";
        console.log(file);
        // });
    }

    document.addEventListener('DOMContentLoaded', (event) => {

    // Отримання посилань на елементи форми
    const countrySelect = document.getElementById('country');
    const stateSelect = document.getElementById('state');
    const citySelect = document.getElementById('city');
    const zipField = document.getElementById('zip');
    const statesData = {
        usa: [
            'Select State',
            'Alabama',
            'Alaska',
            'Arizona',
            'Arkansas',
            'California',
            'Colorado',
            'Connecticut',
            'Delaware',
            'Florida',
            'Georgia',
            'Hawaii',
            'Idaho',
            'Illinois',
            'Indiana',
            'Iowa',
            'Kansas',
            'Kentucky',
            'Louisiana',
            'Maine',
            'Maryland',
            'Massachusetts',
            'Michigan',
            'Minnesota',
            'Mississippi',
            'Missouri',
            'Montana',
            'Nebraska',
            'Nevada',
            'New Hampshire',
            'New Jersey',
            'New Mexico',
            'New York',
            'North Carolina',
            'North Dakota',
            'Ohio',
            'Oklahoma',
            'Oregon',
            'Pennsylvania',
            'Rhode Island',
            'South Carolina',
            'South Dakota',
            'Tennessee',
            'Texas',
            'Utah',
            'Vermont',
            'Virginia',
            'Washington',
            'West Virginia',
            'Wisconsin',
            'Wyoming'
        ],
        canada: [
            'Select State',
            'Alberta',
            'British Columbia',
            'Manitoba',
            'New Brunswick',
            'Newfoundland and Labrador',
            'Northwest Territories',
            'Nova Scotia',
            'Nunavut',
            'Ontario',
            'Prince Edward Island',
            'Quebec',
            'Saskatchewan',
            'Yukon'
        ]
    };

    stateSelect.disabled = true;
    citySelect.disabled = true;
    zipField.disabled = true;

        function renderStates(country) {
            stateSelect.innerHTML = ''; //очищаємо список штатів перед додаванням нових елементів

            if (country in statesData) {
                for (let i = 0; i < statesData[country].length; i++) {
                    let option = document.createElement('option');
                    option.value = statesData[country][i];
                    option.text = statesData[country][i];
                    stateSelect.appendChild(option);
                }
                stateSelect.disabled = false;
            } else {
                stateSelect.disabled = true;
            }
        }

        countrySelect.addEventListener('change', function() {
            renderStates(this.value);
        });

        stateSelect.addEventListener('change', () => {
            citySelect.disabled = false;
            zipField.disabled = false;
        });
    })

    // Show or hide the image upload value

    function toggleDivVisibility() {
        console.log('upload-image');
        const selectBox = document.querySelectorAll('[data-upload-image]')[0];
        const uoploadBlock = document.querySelectorAll('[data-upload-image-block]')[0];
        const selectedValue = selectBox.value;
        console.log('upload-image', selectBox, 'uoploadBlock', uoploadBlock);

        if (selectedValue === 'true') {
            console.log('true')
            uoploadBlock.style.display = 'block';
        } else {
            console.log('false')
            uoploadBlock.style.display = 'none';
        }
    }
    function formResize(size) {
        const popup = document.querySelector('.tingle-modal-box');
        if (size === "lg") {
            popup.classList.add('tingle-modal-box__lg');
        } else {
            popup.classList.remove('tingle-modal-box__lg');
        }
    }

    function showSpinner() {
        const spinner = document.querySelector('[data-spinner-wrap]');
        spinner.style.display = 'block';
    }

    function hideSpinner() {
        const spinner = document.querySelector('[data-spinner-wrap]');
        spinner.style.display = 'none';
    }

    function submitForm(event) {
        const form = document.getElementById('create_customer');
        // form.addEventListener('submit', (event) => {

        event.preventDefault(); // Stop the default form submission
        const fileInput = document.getElementById('file-input');
        const formData = {
            customer: {
                first_name: form.firstName.value,
                last_name: form.last_name.value,
                email: form.email.value,
                password: form.password.value,
                password_confirmation: form.confirmPassword.value,
                phone: form.phone.value.replace(/\s|-/g, ''),
                salon_name: form.salon_name.value,
                distributor_name: form.distributorName.value,
                distributor_email: form.email.value,
                is_suit: form.isSuit.value,
                addresses: [{
                    salon_address: form.salon_address.value,
                    country: form.country.value.toUpperCase(),
                    state: form.province.value,
                    city: form.city.value,
                    zip: form.zip.value
                }]
            }
        };

        // const formData = {
        //     customer :{
        //         first_name: "Seven",
        //         last_name: "Teen",
        //         email:"asівq1вnd@example.com",
        //         password:"123456789",
        //         password_confirmation:"123456789",
        //         phone:"+14142746043",
        //         salon_name:"Mirror",
        //         distributor_name:"John Doe",
        //         is_suit:"false",
        //         addresses:[{
        //             salon_address: "123 Oak St",
        //             country:"Canada",
        //             state:"ON",
        //             city:"Ontario",
        //             zip:"18000"
        //         }]
        //     }
        // }
        showSpinner();
        fetch('https://mj8tucu3k1.execute-api.us-east-1.amazonaws.com/default/registration', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => response.json())
            .then(response => {
                if (response.success) {
                    if (fileInput.files.length > 0) {
                        const file = fileInput.files[0];
                        const validateFileName = file.name.replace(/[\/+&\\]/g, '_');
                        const fileName = btoa(form.email) + '&' + validateFileName;
                        const uploadUrl = `https://dfx7dgn178.execute-api.us-east-1.amazonaws.com/development/amika-file-upload-stage/${fileName}`;

                        return fetch(uploadUrl, {
                            method: 'POST',
                            // mode: 'no-cors',
                            headers: {
                                'Content-Type': 'multipart/form-data'
                            },
                            body: file
                        })
                            .then(function(response) {
                                if (response.status === 200) {
                                    console.log('Response success');
                                    window.showSuccessForm();
                                    hideSpinner();
                                    // window.loginRegisterAlertPopup.close(); // Закриття попапу
                                    // window.location.hash = '';
                                } else {
                                    alert('Image not uploaded.'); // Виклик функції для виведення повідомлення про незавантажений імедж
                                }
                            })
                            .catch(function(error) {
                                console.error('Error:', error); // Обробка помилок при виконанні запиту
                            });
                    } else if (response.success){
                        // Якщо успішно, але завантаження зображення не потрібно, виконуємо потрібні дії
                        // ...
                        console.log('Якщо успішно, але завантаження зображення не потрібно, виконуємо потрібні дії');
                        // window.loginRegisterAlertPopup.close();
                        // window.location.hash = '';
                        window.showSuccessForm();
                        hideSpinner();
                        return Promise.resolve();
                    }
                    else {
                        console.log('fieldName', response.errors[0].field_name);
                        console.log('error_message', response.errors[0].error_message);
                        hideSpinner();
                        window.hideRecoverPasswordForm();
                    }
                    // Success response
                    console.log('Form submitted successfully');
                } else {
                    // Error response
                    console.log('Form submission error:', response.error_message);
                    hideSpinner();
                    // Highlight invalid fields
                    // const emailField = form.email;
                    // const emailError = document.getElementById("emailError");

                    // window.nextPrev(-2);
                    // emailField.classList.add('invalid');
                    // uoploadBlock.style.display = 'block';
                    // emailError.textContent = "Email already exists";
                    // if (response.error_message.includes("Phone has already been taken")) {
                    //     console.log("Phone number has already been taken.");
                    //     console.log(response.error_message);
                    // }
                    // if (response.field_name === 'email') {
                    //     console.log(response.error_message);
                    // }

                    window.nextPrev(-2);
                    const responseErrors = response.errors
                    console.log('responseErrors', responseErrors)
                    responseErrors.forEach(function(error) {
                        const fieldId = error.field_name;
                        const errorMessage = error.error_message;

                        const fieldElement = document.getElementById(fieldId);
                        const errorElement = fieldElement.nextElementSibling;
                        console.log('el', fieldElement);
                        fieldElement.classList.add("invalid");
                        errorElement.style.display = "block";
                        errorElement.textContent = errorMessage;
                    });

                    // responseErrors.forEach(function (field) {
                    //     const fieldId =  field.field_name;
                    //     const errorMessage = field.error_message;
                    //     const el = document.getElementById(fieldId);
                    //     console.log('el', el);
                    //     el.classList.add('invalid');
                    //     el.nextElementSibling.textContent = errorMessage;
                    // });

                    // emailField.addEventListener('input', function() {
                    //     emailField.classList.remove('invalid');
                    //     emailError.textContent = "";
                    // });
                    // emailField.addEventListener('input', window.checkFormValidity);
                }
        })
            // .then(response => {
            //     if (response && response.ok) {
            //         console.log('Зображення успішно завантажено');
            //         return response.json();
            //
            //     } else {
            //         throw new Error('Помилка під час завантаження зображення');
            //     }
            // })
            // .then(data => {
            //     document.getElementById('customer-register').style.display='none';
            //     console.log('Обробка даних, які повернув сервер після завантаження зображення');
            //     // Обробка даних, які повернув сервер після завантаження зображення
            //     // ...
            // })
            .catch(error => {
                // Error handling
                hideSpinner();
                console.log(error);
            });
    }
</script>