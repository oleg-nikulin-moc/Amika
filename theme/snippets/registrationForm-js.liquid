<script>


    function validateForm() {
        const tabs = document.getElementsByClassName("tab");
        const requiredFields = tabs[currentTab].querySelectorAll("[required]");
        const passwordInput = document.getElementById("password");
        const confirmPasswordInput = document.getElementById("confirmPassword");
        const passwordError = document.getElementById("passwordError");
        let valid = true;

        for (let i = 0; i < requiredFields.length; i++) {
            if (requiredFields[i].value === "") {
                requiredFields[i].classList.add("invalid");
                valid = false;
            }
        }

        if (passwordInput.value !== confirmPasswordInput.value) {
            passwordError.textContent = "Passwords do not match";
            valid = false;
        } else {
            passwordError.textContent = "";
        }

        return valid;
    }

    // Upload function
    function imagePreview() {
        const fileField = document.getElementById("file-input");
        const labelText = document.querySelector("[data-upload-text]");
        const labelRemove = document.querySelector("[data-remove-img]");
        const uploadWrap = document.querySelector("[data-upload-file]");
        const uploadImageWrap = document.querySelector("[ data-upload-image-wrap]");
        const labelDefault = labelText.textContent;
        const preview = document.getElementById("preview");

        // on file change
        // file.addEventListener("change", (event) => {
        const file = fileField.files[0];
        const allowedTypes = ['image/jpeg', 'image/jpg', 'application/pdf', 'image/png'];

        // Перевірити, чи вибраний файл і його розмір не перевищує 5 МБ
        if (file && file.size > 5 * 1024 * 1024) {
            alert('Розмір файлу перевищує максимально допустимий розмір (5 МБ). Будь ласка, виберіть файл меншого розміру.');
            // Очистити значення елемента вводу файлу (необов'язково)
            fileField.value = '';
        }
        if (allowedTypes.includes(file.type)) {
            const fileName = fileField.value.split("\\").pop();
            if (fileName) {
                console.log(file);
                labelText.textContent = fileName;
                labelRemove.style.display = "flex";
                preview.style.display = "block";

                console.log('file.files', file)
                if (file.type === "application/pdf") {
                    console.log('1')
                    uploadImageWrap.style.display = "none";
                    uploadWrap.style.display = "none";
                } else {
                    console.log('2')
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        preview.setAttribute("src", e.target.result);
                        uploadWrap.style.display = "none";
                        uploadImageWrap.style.display = "block";
                    };
                    reader.readAsDataURL(file);
                }
            } else {
                labelText.textContent = labelDefault;
                labelRemove.style.display = "none";
                preview.style.display = "none";
                uploadWrap.style.display = "block";
            }
        }
        // });
    }

    // Remove file
    function removePreview() {
        const fileField = document.getElementById("file-input");
        const file = fileField.files[0];
        const labelText = document.querySelector("[data-upload-text]");
        const labelRemove = document.querySelector("[data-remove-img]");
        const uploadWrap = document.querySelector("[data-upload-file]");
        const preview = document.getElementById("preview");
        const labelDefault = labelText.textContent;
        // labelRemove.addEventListener("click", (event) => {
        file.value = "";
        labelText.textContent = labelDefault;
        labelRemove.style.display = "none";
        preview.style.display = "none";
        uploadWrap.style.display = "block";
        console.log(file);
        // });
    }

    document.addEventListener('DOMContentLoaded', (event) => {

    // Отримання посилань на елементи форми
    const countrySelect = document.getElementById('country');
    const stateSelect = document.getElementById('state');
    const citySelect = document.getElementById('city');
    const zipField = document.getElementById('zip');
    const statesData = {
        usa: [
            'Alabama',
            'Alaska',
            'Arizona',
            'Arkansas',
            'California',
            'Colorado',
            'Connecticut',
            'Delaware',
            'Florida',
            'Georgia',
            'Hawaii',
            'Idaho',
            'Illinois',
            'Indiana',
            'Iowa',
            'Kansas',
            'Kentucky',
            'Louisiana',
            'Maine',
            'Maryland',
            'Massachusetts',
            'Michigan',
            'Minnesota',
            'Mississippi',
            'Missouri',
            'Montana',
            'Nebraska',
            'Nevada',
            'New Hampshire',
            'New Jersey',
            'New Mexico',
            'New York',
            'North Carolina',
            'North Dakota',
            'Ohio',
            'Oklahoma',
            'Oregon',
            'Pennsylvania',
            'Rhode Island',
            'South Carolina',
            'South Dakota',
            'Tennessee',
            'Texas',
            'Utah',
            'Vermont',
            'Virginia',
            'Washington',
            'West Virginia',
            'Wisconsin',
            'Wyoming'
        ],
        canada: [
            'Alberta',
            'British Columbia',
            'Manitoba',
            'New Brunswick',
            'Newfoundland and Labrador',
            'Northwest Territories',
            'Nova Scotia',
            'Nunavut',
            'Ontario',
            'Prince Edward Island',
            'Quebec',
            'Saskatchewan',
            'Yukon'
        ]
    };

        stateSelect.disabled = true;
        citySelect.disabled = true;
        zipField.disabled = true;

        function renderStates(country) {
            stateSelect.innerHTML = ''; //очищаємо список штатів перед додаванням нових елементів

            if (country in statesData) {
                for (let i = 0; i < statesData[country].length; i++) {
                    let option = document.createElement('option');
                    option.value = statesData[country][i];
                    option.text = statesData[country][i];
                    stateSelect.appendChild(option);
                }
                stateSelect.disabled = false;
            } else {
                stateSelect.disabled = true;
            }
        }

        countrySelect.addEventListener('change', function() {
            renderStates(this.value);
        });

        stateSelect.addEventListener('change', () => {
            citySelect.disabled = false;
            zipField.disabled = false;
        });
    })

    // Show or hide the image upload value

    function toggleDivVisibility() {
        const selectBox = document.querySelectorAll('[data-upload-image]')[0];
        const uoploadBlock = document.querySelectorAll('[data-upload-image-block]')[0];
        const selectedValue = selectBox.value;

        if (selectedValue === 'yes') {
            uoploadBlock.style.display = 'block';
        } else {
            uoploadBlock.style.display = 'none';
        }
    }

    function submitForm(event) {
        const form = document.getElementById('create_customer');
        // form.addEventListener('submit', (event) => {

        event.preventDefault(); // Stop the default form submission
        const fileInput = document.getElementById('file-input');
        // const formData = {
        //     customer: {
        //         first_name: form.firstName.value,
        //         last_name: form.lastName.value,
        //         email: form.email.value,
        //         password: form.password.value,
        //         password_confirmation: form.confirmPassword.value,
        //         phone: form.phone.value,
        //         salon_name: form.salonName.value,
        //         distributor_name: form.distributorName.value,
        //         is_suit: form.isSuit.value,
        //         addresses: [{
        //             salon_address: form.salonAddress.value,
        //             country: form.country.value,
        //             province: form.province.value,
        //             city: form.city.value,
        //             zip: form.zip.value
        //         }]
        //     }
        // };

        const formData = {
            customer :{
                first_name: "Seven",
                last_name: "Teen",
                email:"asq1вhdxerуsdуskіddуnd@example.com",
                password:"123456789",
                password_confirmation:"123456789",
                phone:"+14142746038",
                salon_name:"Mirror",
                distributor_name:"John Doe",
                is_suit:"false",
                addresses:[{
                    salon_address: "123 Oak St",
                    country:"Canada",
                    province:"ON",
                    city:"Ontario",
                    zip:"18000"
                }]
            }
        }

        fetch('https://mj8tucu3k1.execute-api.us-east-1.amazonaws.com/default/registration', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => response.json())
            .then(response => {
                if (response.success) {
                    // Success response
                    console.log('Form submitted successfully');
                } else {
                    // Error response
                    console.log('Form submission error:', response.error_message);

                    // Highlight invalid fields
                    const emailField = form.email;
                    const emailError = document.getElementById("emailError");

                    console.log('emailField', emailField);
                    emailField.classList.add('invalid');
                    emailError.textContent = "Email already exists";
                    window.nextPrev(-2);
                    emailField.addEventListener('input', function() {
                        emailField.classList.remove('invalid');
                        emailError.textContent = "";
                    });
                }
            if (fileInput.files.length > 0) {
                const file = fileInput.files[0];
                const fileName = btoa(form.email) + '&' + file.name;
                const uploadUrl = `https://dfx7dgn178.execute-api.us-east-1.amazonaws.com/development/amika-file-upload-stage/${fileName}`;

                return fetch(uploadUrl, {
                    method: 'POST',
                    // mode: 'no-cors',
                    headers: {
                        'Content-Type': 'multipart/form-data'
                    },
                    body: file
                })
                .then(function(response) {
                    console.log(response)
                    if (response.status === 200) {
                        window.loginRegisterAlertPopup.close(); // Закриття попапу
                        window.location.hash = '';
                    } else {
                        alert('Image not uploaded.'); // Виклик функції для виведення повідомлення про незавантажений імедж
                    }
                })
                .catch(function(error) {
                    console.error('Error:', error); // Обробка помилок при виконанні запиту
                });
            } else {
                // Якщо успішно, але завантаження зображення не потрібно, виконуємо потрібні дії
                // ...
                console.log('Якщо успішно, але завантаження зображення не потрібно, виконуємо потрібні дії');
                window.loginRegisterAlertPopup.close();
                window.location.hash = '';
                return Promise.resolve();
            }
        })
            // .then(response => {
            //     if (response && response.ok) {
            //         console.log('Зображення успішно завантажено');
            //         return response.json();
            //
            //     } else {
            //         throw new Error('Помилка під час завантаження зображення');
            //     }
            // })
            // .then(data => {
            //     document.getElementById('customer-register').style.display='none';
            //     console.log('Обробка даних, які повернув сервер після завантаження зображення');
            //     // Обробка даних, які повернув сервер після завантаження зображення
            //     // ...
            // })
            .catch(error => {
                // Error handling
                console.log(error);
            });
    }
</script>

null

